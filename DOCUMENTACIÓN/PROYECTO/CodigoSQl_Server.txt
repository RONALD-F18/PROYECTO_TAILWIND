-- ========================================
-- LIMPIAR OBJETOS EXISTENTES (SI EXISTEN)
-- ========================================


USE proyecto;

-- Eliminar procedimientos si existen
IF OBJECT_ID('obtener_Datos_Usuario', 'P') IS NOT NULL
    DROP PROCEDURE obtener_Datos_Usuario;
IF OBJECT_ID('obtener_Afiliacion_Empleados', 'P') IS NOT NULL
    DROP PROCEDURE obtener_Afiliacion_Empleados;
IF OBJECT_ID('obtener_Comunicados_Empleado', 'P') IS NOT NULL
    DROP PROCEDURE obtener_Comunicados_Empleado;

-- Eliminar vistas si existen
IF OBJECT_ID('empleadosporvenir', 'V') IS NOT NULL
    DROP VIEW empleadosporvenir;
IF OBJECT_ID('empleados_eps', 'V') IS NOT NULL
    DROP VIEW empleados_eps;
IF OBJECT_ID('empleados_pensiones_bancos', 'V') IS NOT NULL
    DROP VIEW empleados_pensiones_bancos;

-- Eliminar triggers si existen
IF OBJECT_ID('trg_insert_afiliacion', 'TR') IS NOT NULL
    DROP TRIGGER trg_insert_afiliacion;
IF OBJECT_ID('tr_update_empleado', 'TR') IS NOT NULL
    DROP TRIGGER tr_update_empleado;
IF OBJECT_ID('tr_delete_empleado', 'TR') IS NOT NULL
    DROP TRIGGER tr_delete_empleado;

-- Eliminar tablas si existen (en orden inverso por las FK)
IF OBJECT_ID('reporte', 'U') IS NOT NULL
    DROP TABLE reporte;
IF OBJECT_ID('prestacion_social', 'U') IS NOT NULL
    DROP TABLE prestacion_social;
IF OBJECT_ID('incapacidad', 'U') IS NOT NULL
    DROP TABLE incapacidad;
IF OBJECT_ID('inasistencia', 'U') IS NOT NULL
    DROP TABLE inasistencia;
IF OBJECT_ID('documentos_empleado', 'U') IS NOT NULL
    DROP TABLE documentos_empleado;
IF OBJECT_ID('contrato', 'U') IS NOT NULL
    DROP TABLE contrato;
IF OBJECT_ID('comunicacion_disciplinaria', 'U') IS NOT NULL
    DROP TABLE comunicacion_disciplinaria;
IF OBJECT_ID('certificacion', 'U') IS NOT NULL
    DROP TABLE certificacion;
IF OBJECT_ID('afiliacion', 'U') IS NOT NULL
    DROP TABLE afiliacion;
IF OBJECT_ID('actividad', 'U') IS NOT NULL
    DROP TABLE actividad;
IF OBJECT_ID('empleado', 'U') IS NOT NULL
    DROP TABLE empleado;
IF OBJECT_ID('usuario', 'U') IS NOT NULL
    DROP TABLE usuario;
IF OBJECT_ID('empresa', 'U') IS NOT NULL
    DROP TABLE empresa;
IF OBJECT_ID('cargo', 'U') IS NOT NULL
    DROP TABLE cargo;
IF OBJECT_ID('banco', 'U') IS NOT NULL
    DROP TABLE banco;
IF OBJECT_ID('eps', 'U') IS NOT NULL
    DROP TABLE eps;
IF OBJECT_ID('rol', 'U') IS NOT NULL
    DROP TABLE rol;
GO

-- ========================================
-- CREAR TABLAS
-- ========================================

-- Tabla rol
CREATE TABLE rol (
    Cod_Rol int PRIMARY KEY,
    Nomb_Rol varchar(35) NOT NULL UNIQUE,
    Descripción varchar(150) NULL
);

-- Tabla eps
CREATE TABLE eps (
    Cod_EPS int PRIMARY KEY,
    Nomb_EPS varchar(50) NOT NULL
);

-- Tabla banco
CREATE TABLE banco (
    Cod_Banc int PRIMARY KEY,
    Nomb_Banc varchar(50) NOT NULL UNIQUE
);

-- Tabla cargo
CREATE TABLE cargo (
    Cod_Cargo int PRIMARY KEY,
    Nomb_Cargo varchar(50) NOT NULL UNIQUE
);

-- Tabla empresa
CREATE TABLE empresa (
    Nit_Emp int PRIMARY KEY,
    Num_Tel varchar(15) NOT NULL UNIQUE,
    Dirección varchar(50) NOT NULL,
    Raz_Soc varchar(50) NOT NULL,
    Tip_Emp varchar(30) NOT NULL,
    Misión varchar(150) NOT NULL,
    Nomb_Repr varchar(50) NOT NULL,
    Act_Eco varchar(40) NOT NULL,
    Visión varchar(50) NOT NULL,
    Reg_Trib varchar(50) NOT NULL,
    Fech_Cre date NOT NULL
);

-- Tabla usuario
CREATE TABLE usuario (
    Doc_Ident int PRIMARY KEY,
    Tipo_Doc varchar(6) NOT NULL,
    Num_Tele varchar(15) NOT NULL UNIQUE,
    Contraseña varchar(25) NOT NULL,
    Nomb_Usua varchar(50) NOT NULL UNIQUE,
    Correo varchar(50) NOT NULL UNIQUE,
    Nomb_Comp varchar(50) NOT NULL,
    Fecha_Nac date NOT NULL,
    Sexo varchar(15) NOT NULL,
    Cod_Rol int NOT NULL,
    FOREIGN KEY (Cod_Rol) REFERENCES rol(Cod_Rol) ON DELETE CASCADE
);

-- Tabla empleado
CREATE TABLE empleado (
    Doc_Ident int PRIMARY KEY,
    Dirección varchar(50) NOT NULL,
    Num_Cuen varchar(30) NOT NULL,
    Cod_EPS int NOT NULL,
    Fond_Pens varchar(30) NOT NULL,
    Cod_Ban int NOT NULL,
    Est_Empleado varchar(20) NOT NULL,
    Discapacidad varchar(30) NOT NULL,
    Nacionalidad varchar(25) NOT NULL,
    Estado_Civ varchar(15) NOT NULL,
    Grupo_San varchar(4) NOT NULL,
    Profesion varchar(30) NOT NULL,
    RH varchar(4) NOT NULL,
    Tip_Cuen varchar(15) NOT NULL,
    Fec_Exp_Doc date NOT NULL,
    Descripción varchar(200) NOT NULL,
    Fond_Cesa varchar(30) NOT NULL,
    Regimen varchar(20) NULL,
    FOREIGN KEY (Doc_Ident) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE,
    FOREIGN KEY (Cod_EPS) REFERENCES eps(Cod_EPS) ON DELETE CASCADE,
    FOREIGN KEY (Cod_Ban) REFERENCES banco(Cod_Banc) ON DELETE CASCADE
);

-- Tabla actividad
CREATE TABLE actividad (
    Cod_Act int PRIMARY KEY,
    Nomb_Act varchar(40) NOT NULL UNIQUE,
    Fecha_Ini date NOT NULL,
    Fecha_Fin date NOT NULL,
    Fecha_Act date NOT NULL,
    Descripción varchar(150) NOT NULL
);

-- Tabla afiliacion
CREATE TABLE afiliacion (
    Cod_Afi int IDENTITY(1,1) PRIMARY KEY,
    Fech_Solici date DEFAULT GETDATE(),
    Cod_EPS int NOT NULL,
    Nit_Emp int DEFAULT 900123456,
    Estado varchar(20) DEFAULT 'Pendiente',
    Doc_Ident int NOT NULL,
    Tip_Afil varchar(20) DEFAULT 'Nueva',
    Regimen varchar(20) NOT NULL,
    Descripción varchar(150) DEFAULT 'Afiliación Nueva',
    FOREIGN KEY (Cod_EPS) REFERENCES eps(Cod_EPS) ON DELETE CASCADE,
    FOREIGN KEY (Doc_Ident) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE,
    FOREIGN KEY (Nit_Emp) REFERENCES empresa(Nit_Emp) ON DELETE CASCADE
);

-- Tabla certificacion
CREATE TABLE certificacion (
    Cod_Cert int PRIMARY KEY,
    Descripción varchar(150) NOT NULL,
    Tip_Cert varchar(20) NOT NULL,
    Fech_Emi datetime2 NOT NULL DEFAULT GETDATE(),
    Doc_Iden int NOT NULL,
    FOREIGN KEY (Doc_Iden) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE
);

-- Tabla comunicacion_disciplinaria
CREATE TABLE comunicacion_disciplinaria (
    Cod_Not int PRIMARY KEY,
    Fech_Emi date NOT NULL,
    Asunto varchar(35) NOT NULL,
    Estado varchar(15) NOT NULL,
    Fech_Ini date NOT NULL,
    Fech_Fin date NOT NULL,
    Doc_Iden int NOT NULL,
    Tip_Comun varchar(20) NOT NULL,
    Descripción text NOT NULL,
    Nomb_Res varchar(50) NOT NULL,
    FOREIGN KEY (Doc_Iden) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE
);

-- Tabla contrato
CREATE TABLE contrato (
    Cod_Contrato int PRIMARY KEY,
    Descripción text NOT NULL,
    Doc_Iden int NOT NULL,
    Fecha_Ing date NOT NULL,
    Fecha_Fin date NOT NULL,
    Tip_Contrato varchar(20) NOT NULL,
    Horar_Trab varchar(30) NOT NULL,
    Mod_Trab varchar(20) NOT NULL,
    Salario float NOT NULL,
    Aux_Trans float NOT NULL,
    Form_Pago varchar(20) NOT NULL,
    Nit_Emp int NOT NULL,
    Jorn_Lab varchar(20) NOT NULL,
    Tip_Salar varchar(20) NOT NULL,
    Cod_Carg int NOT NULL,
    FOREIGN KEY (Doc_Iden) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE,
    FOREIGN KEY (Nit_Emp) REFERENCES empresa(Nit_Emp) ON DELETE CASCADE,
    FOREIGN KEY (Cod_Carg) REFERENCES cargo(Cod_Cargo) ON DELETE CASCADE
);

-- Tabla documentos_empleado
CREATE TABLE documentos_empleado (
    id_Archivo int IDENTITY(1,1) PRIMARY KEY,
    Doc_Iden int NOT NULL,
    Nombre_Archivo varchar(100) NOT NULL UNIQUE,
    Ruta_Archivo varchar(255) NOT NULL,
    Fecha_Subida datetime2 NOT NULL DEFAULT GETDATE(),
    Obligatorio bit NOT NULL DEFAULT 0,
    FOREIGN KEY (Doc_Iden) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE
);

-- Tabla inasistencia
CREATE TABLE inasistencia (
    Cod_Inasis int PRIMARY KEY,
    Fech_Inasis date NOT NULL,
    Doc_Iden int NOT NULL,
    Descripción varchar(150) NOT NULL,
    FOREIGN KEY (Doc_Iden) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE
);

-- Tabla incapacidad
CREATE TABLE incapacidad (
    Cod_Inc int PRIMARY KEY,
    Nit_Emp int NOT NULL,
    Descripción varchar(200) NOT NULL,
    Motivo varchar(25) NOT NULL,
    Fech_Ini date NOT NULL,
    Fech_Fin date NOT NULL,
    Fech_Radi date NOT NULL,
    Tip_Inc varchar(20) NOT NULL,
    Responsable varchar(50) NOT NULL,
    Doc_Iden int NOT NULL,
    Valor_Porc_Pago float NOT NULL,
    FOREIGN KEY (Doc_Iden) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE,
    FOREIGN KEY (Nit_Emp) REFERENCES empresa(Nit_Emp) ON DELETE CASCADE
);

-- Tabla prestacion_social
CREATE TABLE prestacion_social (
    Cod_Prest int PRIMARY KEY,
    Tip_Pres varchar(20) NOT NULL,
    Fecha_Perio_Ini date NOT NULL,
    Fecha_Perio_fin date NOT NULL,
    Doc_Inden int NOT NULL,
    Cod_Contrato int NOT NULL,
    Nit_Emp int NOT NULL,
    Enti_Desti varchar(20) NOT NULL,
    Descripció varchar(150) NOT NULL,
    FOREIGN KEY (Doc_Inden) REFERENCES usuario(Doc_Ident) ON DELETE NO ACTION,
    FOREIGN KEY (Cod_Contrato) REFERENCES contrato(Cod_Contrato) ON DELETE NO ACTION,
    FOREIGN KEY (Nit_Emp) REFERENCES empresa(Nit_Emp) ON DELETE NO ACTION
);

-- Tabla reporte
CREATE TABLE reporte (
    Cod_Rep int PRIMARY KEY,
    Tipo_Rep varchar(20) NOT NULL,
    Fecha_Emis date NOT NULL,
    Nomb_Rep varchar(25) NOT NULL,
    Descripción varchar(150) NOT NULL,
    Tipo_Form varchar(20) NOT NULL,
    Doc_Ident int NOT NULL,
    FOREIGN KEY (Doc_Ident) REFERENCES usuario(Doc_Ident) ON DELETE CASCADE
);
GO

-- ========================================
-- INSERTAR DATOS
-- ========================================

-- Insertar roles
INSERT INTO rol (Cod_Rol, Nomb_Rol, Descripción) VALUES
(1010, 'Empleado', 'Acceso limitado al sistema, solo puede consultar, registrar y actualizar la información relacionada con sus funciones.'),
(2020, 'Administrador', 'Tiene acceso total al sistema, puede gestionar usuarios, roles, permisos y realizar cambios en toda la información.');

-- Insertar EPS
INSERT INTO eps (Cod_EPS, Nomb_EPS) VALUES
(101010, 'Capital Salud'),
(202020, 'Nueva EPS'),
(303030, 'Salud Total'),
(404040, 'Sura EPS'),
(505050, 'Cafam EPS');

-- Insertar bancos
INSERT INTO banco (Cod_Banc, Nomb_Banc) VALUES
(10, 'BANCOLOMBIA'),
(20, 'BBVA'),
(30, 'BANCO DE BOGOTA'),
(40, 'BANCO AGRARIO'),
(50, 'BANCO NU');

-- Insertar cargos
INSERT INTO cargo (Cod_Cargo, Nomb_Cargo) VALUES
(201, 'Gerente General'),
(202, 'Contador'),
(203, 'Desarrollador de Software'),
(204, 'Diseñador UX/UI'),
(205, 'Asistente Administrativo');

-- Insertar empresa
INSERT INTO empresa (Nit_Emp, Num_Tel, Dirección, Raz_Soc, Tip_Emp, Misión, Nomb_Repr, Act_Eco, Visión, Reg_Trib, Fech_Cre) VALUES
(900123456, '6017894561', 'Avenida Caracas #45-20, Bogotá', 'Tech Solutions S.A.S.', 'Privada', 'Ofrecer soluciones tecnológicas innovadoras que impulsen la transformación digital de nuestros clientes.', 'Ronaldo Stiven Franco Durán', 'Desarrollo de software y consultoría tec', 'Ser líderes en el sector tecnológico colombiano pa', 'Régimen Ordinario', '2015-06-12');

-- Insertar usuarios
INSERT INTO usuario (Doc_Ident, Tipo_Doc, Num_Tele, Contraseña, Nomb_Usua, Correo, Nomb_Comp, Fecha_Nac, Sexo, Cod_Rol) VALUES
(114557748, 'C.C', '3113167548', 'ronald@777', 'Ronaltix', 'ronad@gmail.com', 'Ronaldo Stiven Franco Duran', '2006-09-03', 'Masculino', 2020),
(114568875, 'C.C', '3453166987', 'agela@777', 'Agelxnau', 'Angela@gmail.com', 'Angela Tatitana Gonzales Pinto', '2006-08-09', 'Femenino', 1010),
(147859745, 'C.C', '3457899675', 'tatis@777', 'GatitaGG', 'tatiana@gmail.com', 'Briyid Tatiana Cruz Molina', '2005-07-02', 'Femenino', 2020),
(778964415, 'C.C', '3743698945', 'willi@777', 'Astronauta', 'willi@gmail.com', 'Willington Guzman Arias', '2000-02-04', 'Masculino', 1010),
(1145577486, 'C.C', '31435698', 'lolamento', 'Lolito', 'lolito@gmail.com', 'Fercho Stiven Ramirez Ruiz', '2006-08-07', 'Masculino', 1010),
(1159784562, 'C.C', '3143155987', 'omar@777', 'Omar99', 'Omar@gmail.com', 'Omar Andres Marcano', '2004-08-08', 'Masculino', 1010);

-- Insertar empleados
INSERT INTO empleado (Doc_Ident, Dirección, Num_Cuen, Cod_EPS, Fond_Pens, Cod_Ban, Est_Empleado, Discapacidad, Nacionalidad, Estado_Civ, Grupo_San, Profesion, RH, Tip_Cuen, Fec_Exp_Doc, Descripción, Fond_Cesa, Regimen) VALUES
(114557748, 'calle 58 sur #98a-61', '014278456213', 101010, 'Colpensiones', 20, 'Activo', 'Ninguna', 'Colombia', 'Soltero', 'O', 'Desarrolldaro Backend', '+', 'Ahorros', '2024-10-18', 'Prioridad', 'Porvenir', 'Contributivo'),
(114568875, 'Carrera 20 #15-30', '010245678912', 202020, 'Protección', 40, 'Activo', 'Ninguna', 'Colombia', 'Soltera', 'A', 'Diseñadora Gráfica', '-', 'Ahorros', '2024-09-12', 'Contrato indefinido', 'Porvenir', 'Subsidiado'),
(147859745, 'Calle 45 #67-89', '015478965321', 101010, 'Colpensiones', 10, 'Activo', 'Ninguna', 'Colombia', 'Soltera', 'B', 'Auxiliar Administrativa', '+', 'Corriente', '2023-11-05', 'Contrato a término fijo', 'Colfondos', 'Subsidiado'),
(778964415, 'Transversal 8 #98-12', '017896543210', 404040, 'Colpensiones', 20, 'Activo', 'Visual leve', 'Colombia', 'Casado', 'AB', 'Ingeniero de Sistemas', '+', 'Ahorros', '2022-05-20', 'Contrato por prestación de servicios', 'Skandia', 'Contributivo'),
(1159784562, 'Diagonal 80 #120-45', '016325478901', 505050, 'Protección', 30, 'Activo', 'Ninguna', 'Colombia', 'Soltero', 'O', 'Analista de Datos', '-', 'Ahorros', '2024-01-10', 'Contrato de aprendizaje', 'Porvenir', 'Subsidiado');

-- Insertar actividades
INSERT INTO actividad (Cod_Act, Nomb_Act, Fecha_Ini, Fecha_Fin, Fecha_Act, Descripción) VALUES
(31, 'Reunión de equipo', '2025-08-25', '2025-08-25', '2025-08-20', 'Reunión semanal para planificar tareas del equipo'),
(32, 'Entrega proyecto', '2025-08-28', '2025-08-28', '2025-08-20', 'Entrega del proyecto de desarrollo de software'),
(33, 'Capacitación interna', '2025-08-26', '2025-08-27', '2025-08-20', 'Capacitación sobre nuevas herramientas de desarrollo'),
(34, 'Mantenimiento sistema', '2025-08-29', '2025-08-29', '2025-08-20', 'Mantenimiento preventivo del sistema principal'),
(35, 'Revisión de documentación', '2025-08-30', '2025-08-30', '2025-08-20', 'Revisión y actualización de la documentación del proyecto');

-- Insertar afiliaciones manualmente
SET IDENTITY_INSERT afiliacion ON;
INSERT INTO afiliacion (Cod_Afi, Fech_Solici, Cod_EPS, Nit_Emp, Estado, Doc_Ident, Tip_Afil, Regimen, Descripción) VALUES
(21, '2025-08-23', 101010, 900123456, 'Pendiente', 114557748, 'Nueva', 'Contributivo', 'Afiliación inicial a'),
(22, '2025-08-23', 202020, 900123456, 'Aprobado', 114568875, 'Nueva', 'Subsidiado', 'Afiliación inicial a'),
(23, '2025-08-23', 101010, 900123456, 'Pendiente', 147859745, 'Nueva', 'Subsidiado', 'Afiliación inicial a'),
(24, '2025-08-23', 404040, 900123456, 'Aprobado', 778964415, 'Nueva', 'Subsidiado', 'Afiliación inicial a'),
(25, '2025-08-23', 505050, 900123456, 'Pendiente', 1159784562, 'Nueva', 'Contributivo', 'Afiliación inicial a');
SET IDENTITY_INSERT afiliacion OFF;

-- Insertar certificaciones
INSERT INTO certificacion (Cod_Cert, Descripción, Tip_Cert, Fech_Emi, Doc_Iden) VALUES
(41, 'Certificado laboral', 'Laboral', '2025-08-20 00:00:00', 114557748),
(42, 'Certificado de afiliación a EPS', 'Afiliación EPS', '2025-08-20 00:00:00', 114568875),
(43, 'Certificado bancario', 'Bancaria', '2025-08-20 00:00:00', 147859745),
(44, 'Certificado de salario', 'Laboral', '2025-08-20 00:00:00', 778964415),
(45, 'Certificado de prestaciones sociales', 'RRHH', '2025-08-20 00:00:00', 1159784562);

-- Insertar comunicaciones disciplinarias
INSERT INTO comunicacion_disciplinaria (Cod_Not, Fech_Emi, Asunto, Estado, Fech_Ini, Fech_Fin, Doc_Iden, Tip_Comun, Descripción, Nomb_Res) VALUES
(51, '2025-08-20', 'Suspención Temporal', 'Pendiente', '2025-08-21', '2025-08-25', 114557748, 'Memorando', 'El empleado se porto agresivo e insulto a un compañero se aplicara suspensión temporal', 'Ronaldo Stiven Franco Duran'),
(52, '2025-08-20', 'Malas labores', 'Pendiente', '2025-08-22', '2025-08-26', 114568875, 'Llamado de atención', 'El empleado no realiza correctamente bien su trabajo', 'Tatiana Cruz Molina'),
(53, '2025-08-20', 'Abandono de labores', 'Pendiente', '2025-08-23', '2025-08-27', 147859745, 'Memorando', 'El empleado se retiro del trabajo sin excusa pertinente', 'Ronaldo Stiven Franco Duran'),
(54, '2025-08-20', 'Mal desempeño', 'Pendiente', '2025-08-24', '2025-08-28', 778964415, 'Llamado de atención', 'El empleado no esta capacitado para desempeñar sus labores', 'Tatiana Cruz Molina'),
(55, '2025-08-20', 'Robo', 'Pendiente', '2025-08-25', '2025-08-29', 1159784562, 'Memorando', 'El empleado robo material de la empresa', 'Ronaldo Stiven Franco Duran');

-- Insertar contratos
INSERT INTO contrato (Cod_Contrato, Descripción, Doc_Iden, Fecha_Ing, Fecha_Fin, Tip_Contrato, Horar_Trab, Mod_Trab, Salario, Aux_Trans, Form_Pago, Nit_Emp, Jorn_Lab, Tip_Salar, Cod_Carg) VALUES
(5001, 'Contrato indefinido para gerente general', 114557748, '2024-01-15', '2026-01-15', 'Indefinido', '40 horas', 'Presencial', 4500000, 162000, 'Transferencia Bancar', 900123456, 'Tiempo completo', 'Mensual', 201),
(5002, 'Contrato a término fijo como contador', 114568875, '2024-03-01', '2025-03-01', 'Fijo', '40 horas', 'Híbrido', 2800000, 162000, 'Transferencia Bancar', 900123456, 'Tiempo completo', 'Mensual', 202),
(5003, 'Contrato indefinido como desarrollador de software', 147859745, '2024-02-10', '2026-02-10', 'Indefinido', '40 horas', 'Remoto', 3200000, 162000, 'Transferencia Bancar', 900123456, 'Tiempo completo', 'Mensual', 203),
(5004, 'Contrato de prestación de servicios para diseñador UX/UI', 778964415, '2024-04-05', '2024-10-05', 'Prestación de servic', '20 horas', 'Remoto', 1800000, 0, 'Transferencia Bancar', 900123456, 'Medio tiempo', 'Honorarios', 204),
(5005, 'Contrato de aprendizaje como asistente administrativo', 1159784562, '2024-05-01', '2025-05-01', 'Aprendizaje', '30 horas', 'Presencial', 1200000, 162000, 'Efectivo', 900123456, 'Medio tiempo', 'Mensual', 205);

-- Insertar documentos empleado
SET IDENTITY_INSERT documentos_empleado ON;
INSERT INTO documentos_empleado (id_Archivo, Doc_Iden, Nombre_Archivo, Ruta_Archivo, Fecha_Subida, Obligatorio) VALUES
(1, 114557748, 'Contrato_Ronaldo.pdf', 'https://drive.google.com/drive/u/0/folders/1lBfdIUI-VX6TftfEi91VgjmDTlh56-42/Contrato_Ronaldo.pdf', '2025-08-24 21:24:07', 1),
(2, 114568875, 'Afiliacion_EPS_Angela.pdf', 'https://drive.google.com/drive/u/0/folders/1lBfdIUI-VX6TftfEi91VgjmDTlh56-42/Afiliacion_EPS_Angela.pdf', '2025-08-24 21:24:07', 1),
(3, 147859745, 'Certificado_Bancario_Tatiana.pdf', 'https://drive.google.com/drive/u/0/folders/1lBfdIUI-VX6TftfEi91VgjmDTlh56-42/Certificado_Bancario_Tatiana.pdf', '2025-08-24 21:24:07', 1),
(4, 778964415, 'Entrega_Prestaciones_Willington.pdf', 'https://drive.google.com/drive/u/0/folders/1lBfdIUI-VX6TftfEi91VgjmDTlh56-42/Entrega_Prestaciones_Willington.pdf', '2025-08-24 21:24:07', 0),
(5, 1159784562, 'Capacitacion_Omar.pdf', 'https://drive.google.com/drive/u/0/folders/1lBfdIUI-VX6TftfEi91VgjmDTlh56-42/Capacitacion_Omar.pdf', '2025-08-24 21:24:07', 0);
SET IDENTITY_INSERT documentos_empleado OFF;

-- Insertar inasistencias
INSERT INTO inasistencia (Cod_Inasis, Fech_Inasis, Doc_Iden, Descripción) VALUES
(11, '2025-08-23', 114557748, 'Faltó por enfermedad'),
(12, '2025-08-23', 114568875, 'Llegó tarde a clase'),
(13, '2025-08-23', 147859745, 'No asistió a la sesión'),
(14, '2025-08-23', 778964415, 'Faltó por viaje familiar'),
(15, '2025-08-23', 1159784562, 'Llegó tarde por transporte');

-- Insertar incapacidades
INSERT INTO incapacidad (Cod_Inc, Nit_Emp, Descripción, Motivo, Fech_Ini, Fech_Fin, Fech_Radi, Tip_Inc, Responsable, Doc_Iden, Valor_Porc_Pago) VALUES
(1001, 900123456, 'Reposo médico por fiebre y malestar general', 'Gripa fuerte', '2025-02-10', '2025-02-15', '2025-02-11', 'Temporal', 'Dr. Juan Pérez', 114557748, 100),
(1002, 900123456, 'Reposo por accidente doméstico', 'Esguince de tobillo', '2025-01-20', '2025-02-05', '2025-01-21', 'Temporal', 'Dra. Andrea Torres', 114568875, 80),
(1003, 900123456, 'Incapacidad postoperatoria', 'Cirugía menor', '2025-03-01', '2025-03-20', '2025-03-02', 'Temporal', 'Dr. Carlos Medina', 147859745, 100),
(1004, 900123456, 'Reposo por enfermedad respiratoria', 'Bronquitis aguda', '2025-02-05', '2025-02-12', '2025-02-06', 'Temporal', 'Dra. Juliana Gómez', 778964415, 100),
(1005, 900123456, 'Reposo médico por fractura', 'Fractura de brazo izquier', '2025-01-10', '2025-02-25', '2025-01-11', 'Temporal', 'Dr. Felipe Ramírez', 1159784562, 100);

-- Insertar prestaciones sociales
INSERT INTO prestacion_social (Cod_Prest, Tip_Pres, Fecha_Perio_Ini, Fecha_Perio_fin, Doc_Inden, Cod_Contrato, Nit_Emp, Enti_Desti, Descripció) VALUES
(0, 'Cesantías', '2024-01-15', '2024-12-31', 114557748, 5001, 900123456, 'Porvenir', 'Depósito de cesantías correspondientes al año laboral 2024'),
(1, 'Cesantías', '2024-01-15', '2024-12-31', 114557748, 5001, 900123456, 'Porvenir', 'Depósito de cesantías correspondientes al año laboral 2024'),
(2, 'Intereses Cesantías', '2024-01-15', '2024-12-31', 114568875, 5002, 900123456, 'Porvenir', 'Pago de intereses a las cesantías del período 2024'),
(3, 'Vacaciones', '2025-01-10', '2025-01-24', 147859745, 5003, 900123456, 'Empleado', 'Disfrute de vacaciones correspondientes al período trabajado en 2024'),
(4, 'Prima', '2024-06-01', '2024-06-30', 778964415, 5004, 900123456, 'Protección', 'Pago de prima de servicios de mitad de año 2024'),
(5, 'Prima', '2024-12-01', '2024-12-31', 1159784562, 5005, 900123456, 'Protección', 'Pago de prima de servicios de diciembre 2024');

-- Insertar reportes
INSERT INTO reporte (Cod_Rep, Tipo_Rep, Fecha_Emis, Nomb_Rep, Descripción, Tipo_Form, Doc_Ident) VALUES
(61, 'Inasistencia', '2025-08-20', 'Reporte Semanal', 'Registro de inasistencias del empleado durante la semana', 'PDF', 114557748),
(62, 'Incapacidad', '2025-08-21', 'Reporte Médico', 'Resumen de incapacidades médicas presentadas por el empleado', 'PDF', 114568875),
(63, 'Inasistencia', '2025-08-22', 'Reporte Mensual', 'Registro de ausencias y retardos durante el mes', 'Excel', 147859745),
(64, 'Incapacidad', '2025-08-23', 'Reporte Médico', 'Incapacidades presentadas y autorizaciones correspondientes', 'PDF', 778964415),
(65, 'Inasistencia', '2025-08-24', 'Reporte Semanal', 'Seguimiento de inasistencias y puntualidad de los empleados', 'Excel', 1159784562);
GO

-- ========================================
-- TRIGGERS (DISPARADORES)
-- ========================================

-- Trigger para insertar afiliación automáticamente cuando se inserta un empleado
CREATE TRIGGER trg_insert_afiliacion
ON empleado
AFTER INSERT
AS
BEGIN
    INSERT INTO afiliacion (Cod_EPS, Doc_Ident, Regimen) 
    SELECT i.Cod_EPS, i.Doc_Ident, i.Regimen
    FROM inserted i;
END;
GO

-- Trigger para actualizar afiliación cuando se actualiza un empleado
CREATE TRIGGER tr_update_empleado
ON empleado
AFTER UPDATE
AS
BEGIN
    UPDATE afiliacion
    SET 
        Cod_EPS = i.Cod_EPS,
        Doc_Ident = i.Doc_Ident,
        Regimen = i.Regimen
    FROM afiliacion a
    INNER JOIN inserted i ON a.Doc_Ident = i.Doc_Ident;
END;
GO

-- Trigger para eliminar afiliación cuando se elimina un empleado
CREATE TRIGGER tr_delete_empleado
ON empleado
AFTER DELETE
AS
BEGIN
    DELETE FROM afiliacion
    WHERE Doc_Ident IN (SELECT Doc_Ident FROM deleted);
END;
GO

-- ========================================
-- VISTAS
-- ========================================

-- Vista: empleados con fondo de cesantías Porvenir
CREATE VIEW empleadosporvenir AS
SELECT 
    u.Doc_Ident,
    u.Nomb_Comp,
    e.Fond_Cesa
FROM usuario u
INNER JOIN empleado e ON u.Doc_Ident = e.Doc_Ident
WHERE e.Fond_Cesa = 'Porvenir';
GO

-- Vista: empleados con EPS Capital Salud
CREATE VIEW empleados_eps AS
SELECT 
    u.Doc_Ident,
    u.Nomb_Comp,
    eps.Nomb_EPS
FROM empleado e
INNER JOIN usuario u ON u.Doc_Ident = e.Doc_Ident
INNER JOIN eps ON e.Cod_EPS = eps.Cod_EPS
WHERE eps.Cod_EPS = 101010;
GO

-- Vista: empleados con Colpensiones y BBVA
CREATE VIEW empleados_pensiones_bancos AS
SELECT 
    u.Doc_Ident,
    u.Nomb_Comp,
    e.Fond_Pens,
    b.Nomb_Banc
FROM empleado e
INNER JOIN usuario u ON u.Doc_Ident = e.Doc_Ident
INNER JOIN banco b ON e.Cod_Ban = b.Cod_Banc
WHERE e.Fond_Pens = 'Colpensiones' AND b.Nomb_Banc = 'BBVA';
GO

-- ========================================
-- PROCEDIMIENTOS ALMACENADOS
-- ========================================

-- Procedimiento: obtener datos de usuario
CREATE PROCEDURE obtener_Datos_Usuario
    @doc INT
AS
BEGIN
    SELECT *
    FROM usuario
    WHERE Doc_Ident = @doc;
END;
GO

-- Procedimiento: obtener afiliación de empleados
CREATE PROCEDURE obtener_Afiliacion_Empleados
    @num INT
AS
BEGIN
    SELECT 
        u.Doc_Ident, 
        u.Nomb_Comp, 
        eps.Nomb_EPS, 
        a.Fech_Solici, 
        a.Estado, 
        a.Descripción
    FROM afiliacion a
    INNER JOIN usuario u ON u.Doc_Ident = a.Doc_Ident
    INNER JOIN eps ON a.Cod_EPS = eps.Cod_EPS
    WHERE u.Doc_Ident = @num;
END;
GO

-- Procedimiento: obtener comunicados de empleado
CREATE PROCEDURE obtener_Comunicados_Empleado
    @cod INT
AS
BEGIN
    SELECT 
        u.Doc_Ident, 
        u.Nomb_Comp, 
        cd.Tip_Comun,
        cd.Asunto, 
        cd.Descripción
    FROM comunicacion_disciplinaria cd
    INNER JOIN usuario u ON u.Doc_Ident = cd.Doc_Iden
    WHERE u.Doc_Ident = @cod;
END;
GO

-- ========================================
-- VERIFICACIÓN
-- ========================================

-- Consultas para verificar que todo se creó correctamente
SELECT 'Total usuarios:' as Tabla, COUNT(*) as Registros FROM usuario
UNION ALL
SELECT 'Total empleados:', COUNT(*) FROM empleado
UNION ALL
SELECT 'Total afiliaciones:', COUNT(*) FROM afiliacion
UNION ALL
SELECT 'Total contratos:', COUNT(*) FROM contrato
UNION ALL
SELECT 'Total actividades:', COUNT(*) FROM actividad;

PRINT 'Base de datos "proyecto" creada exitosamente en SQL Server!';